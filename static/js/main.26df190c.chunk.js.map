{"version":3,"sources":["serviceWorker.ts","game/done.ts","game/vietnamese.ts","game/game.ts","index.ts","game/wait.ts"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","gameDone$","Rx","showDoneButton","score","doneButton","document","createElement","appendChild","createTextNode","pipe","take","map","next","p1","innerHTML","tab","correct","join","incorrect","time","donePage","domElement","showDonePage","subscribe","doneContainer","appData","numbers","en","vn","animals","people","objects","science","opposites","actions","numbersAlt","getChallenge","previous","langs","shuffle","from","to","category","sample","Object","keys","text","undefined","answer","options","idx","range","length","Error","Math","min","idx2","fake","includes","push","createChallenge","gameStart$","makeButtons","o","startGame","startTime","Date","now","challenge","firstTry","challengeElement","optionsElement","textContent","event","filter","target","value","isButton","guess","tap","delay","fn","root","getElementById","wait","showWait","game","innerText","done","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.26df190c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Rx from 'rxjs';\nimport { Game, Score } from './';\nimport { map, take } from 'rxjs/operators';\n\nexport const gameDone$ = new Rx.ReplaySubject<Game>();\n\nconst showDonePage = (score: Score) => {\n  const p1 = document.createElement('p');\n  p1.innerHTML = `Thank you for playing!`;\n\n  const tab = document.createElement('table');\n  tab.innerHTML = (() => {\n    const correct = `<td>correct: </td><td>${score.correct.join(', ')}</td>`;\n    const incorrect = `<td>incorrect: </td><td>${score.incorrect.join(', ')}</td>`;\n    const time = `<td>time: </td><td>${score.time}</td>`;\n\n    return `<thead><td><bold>score</bold></td></thead>\n    <tbody>\n    <tr>${correct}</tr>\n    <tr>${incorrect}</tr>\n    <tr>${time}</tr>\n    </tbody>`;\n  })();\n\n  const donePage = document.createElement('div');\n  donePage.appendChild(p1);\n  donePage.appendChild(tab);\n  return { domElement: donePage };\n};\n\nexport const showDoneButton = (score: Score) => {\n  const doneButton = document.createElement('button');\n  doneButton.appendChild(document.createTextNode('xong'));\n  Rx.fromEvent(doneButton, 'click')\n    .pipe(\n      take(1),\n      map(() => {\n        gameDone$.next(showDonePage(score));\n      })\n    )\n    .subscribe();\n\n  const doneContainer = document.createElement('p');\n  doneContainer.appendChild(document.createElement('br'));\n  doneContainer.appendChild(document.createElement('br'));\n  doneContainer.appendChild(document.createElement('br'));\n  doneContainer.appendChild(doneButton);\n  return doneContainer;\n};\n","import { range, sample, shuffle } from 'lodash';\n\ntype Language = 'en' | 'vn';\ntype AppData = {\n  [key: string]: {\n    [key: number]: {\n      [lang in Language]: string;\n    };\n    length: number;\n  };\n};\n\nconst appData: AppData = {\n  numbers: [\n    { en: '0', vn: 'không' },\n    { en: '1', vn: 'một' },\n    { en: '2', vn: 'hai' },\n    { en: '3', vn: 'ba' },\n    { en: '4', vn: 'bồn' },\n    { en: '5', vn: 'năm' },\n    { en: '6', vn: 'sáu' },\n    { en: '7', vn: 'bảy' },\n    { en: '8', vn: 'tám' },\n    { en: '9', vn: 'chín' },\n    { en: '10', vn: 'mừỏi' },\n  ],\n  animals: [\n    { en: 'bear', vn: 'gấu' },\n    { en: 'cat', vn: 'mèo' },\n    { en: 'dog', vn: 'chó' },\n    { en: 'fish', vn: 'cá' },\n  ],\n  people: [\n    { en: 'big brother', vn: 'anh trai' },\n    { en: 'grandmother', vn: 'bà ngoại , bà nội ( paternal)' },\n    { en: 'dad', vn: 'ba , cha , bố' },\n    { en: 'little sister', vn: 'em gái' },\n    { en: 'man', vn: 'đàn ông' },\n    { en: 'woman', vn: 'đàn bà' },\n    { en: 'mom', vn: 'mẹ , má' },\n  ],\n  'the body': [\n    { en: 'ear', vn: 'tai' },\n    { en: 'eyes', vn: 'mắc' },\n    { en: 'face', vn: 'mặt' },\n    { en: 'foot', vn: 'chân' },\n    { en: 'hair', vn: 'tóc' },\n    { en: 'hand', vn: 'tay' },\n    { en: 'heart', vn: 'tim' },\n    { en: 'mouth', vn: 'miệng' },\n    { en: 'nose', vn: 'mủi' },\n    { en: 'teeth', vn: 'răng' },\n  ],\n  objects: [\n    { en: 'brick', vn: 'gạch' },\n    { en: 'candy', vn: 'kẹo' },\n    { en: 'cloud', vn: 'mây' },\n    { en: 'house', vn: 'nhà' },\n    { en: 'pants', vn: 'quần' },\n    { en: 'shirt', vn: 'áo' },\n    { en: 'socks', vn: 'dớ' },\n    { en: 'wheat', vn: 'khoai mì' },\n    { en: 'shoes', vn: 'giầy' },\n  ],\n  science: [\n    { en: 'planet', vn: 'hành tin' },\n    { en: 'star', vn: 'ngôi sao' },\n    { en: 'sun', vn: 'mặt trời' },\n    { en: 'moon', vn: 'mặt trăng' },\n  ],\n  opposites: [\n    { en: 'cold', vn: 'lạnh' },\n    { en: 'dry', vn: 'khô' },\n    { en: 'no', vn: 'không' },\n    { en: 'hot', vn: 'nòng' },\n    { en: 'maybe', vn: 'cò thể' },\n    { en: 'new', vn: 'mới' },\n    { en: 'pretty', vn: 'đẹp' },\n    { en: 'ugly', vn: 'xàu' },\n    { en: 'wet', vn: 'ười' },\n    { en: 'yes', vn: 'có' },\n    { en: 'old', vn: 'cũ' },\n  ],\n  actions: [\n    { en: `let's go`, vn: 'đi' },\n    { en: 'drink water', vn: 'uống nước' },\n    { en: 'eat rice', vn: 'ăn cơm' },\n    { en: 'go home', vn: 'đi về' },\n    { en: 'go take a bath/shower', vn: 'đi tấm' },\n    { en: 'go to school', vn: 'đi học' },\n    { en: 'kiss', vn: 'hôn' },\n    { en: 'go to sleep', vn: 'đi ngũ đi' },\n    { en: 'go to work', vn: 'đi làm' },\n    { en: 'to build', vn: 'xây' },\n    { en: 'to drive', vn: 'lài xe' },\n    { en: 'to hold', vn: 'õm' },\n    { en: 'to make', vn: 'lám' },\n    { en: 'to nap', vn: 'ngũ trưa' },\n    { en: 'to pick up', vn: 'ấm' },\n    { en: 'to play', vn: 'chơi' },\n    { en: 'open the door', vn: 'mớ cửa' },\n    { en: 'sleep', vn: 'ngũ' },\n    { en: 'smile', vn: 'cừơi' },\n  ],\n  numbersAlt: [\n    { en: 'eight', vn: 'tám' },\n    { en: 'eleven', vn: 'mừỏi một' },\n    { en: 'five', vn: 'năm' },\n    { en: 'four', vn: 'bốn' },\n    { en: 'nine', vn: 'chín' },\n    { en: 'one', vn: 'một' },\n    { en: 'seven', vn: 'bảy' },\n    { en: 'ten', vn: 'mừỏi' },\n    { en: 'thirteen', vn: 'mừỏi ba' },\n    { en: 'three', vn: 'ba' },\n    { en: 'twelve', vn: 'mừỏi hai' },\n    { en: 'two', vn: 'hai' },\n    { en: 'zero', vn: 'không' },\n    { en: 'six', vn: 'sáu' },\n  ],\n};\n\ninterface Challenge {\n  category: string;\n  text: string;\n  answer: string;\n  options: string[];\n}\n\ntype AppCategory =\n  | 'numbers'\n  | 'animals'\n  | 'people'\n  | 'the body'\n  | 'objects'\n  | 'science'\n  | 'opposites'\n  | 'actions'\n  | 'numbersAlt';\n\nconst createChallenge = (from: Language, to: Language, previous?: Challenge) => {\n  const category = sample(Object.keys(appData)) as AppCategory;\n  let text: string | undefined = undefined;\n  let answer: string | undefined = undefined;\n  let options: string[] | undefined = undefined;\n\n  while (text === undefined) {\n    const idx = sample(range(0, appData[category].length)) as number;\n    answer = appData[category][idx][to];\n    options = [answer];\n    if (!previous || answer !== previous.answer) {\n      text = appData[category][idx][from];\n    }\n  }\n\n  if (!answer || !options) {\n    throw new Error('this error will never be seen');\n  }\n\n  // TODO: more options as it gets harder\n  while (options.length < Math.min(3, appData[category].length)) {\n    const idx2 = sample(range(0, appData[category].length)) as number;\n    const fake = appData[category][idx2][to];\n    if (!options.includes(fake)) {\n      options.push(fake);\n    }\n  }\n\n  return {\n    category,\n    text,\n    answer,\n    options,\n  };\n};\n\n// TODO Levels & Points\nexport const getChallenge = (\n  previous?: Challenge\n): Challenge & { shuffle: () => string[] } => {\n  const langs = shuffle(['vn', 'en']) as [Language, Language];\n  const { category, text, answer, options } = createChallenge(\n    langs[0],\n    langs[1],\n    previous\n  );\n\n  return {\n    category,\n    text,\n    answer,\n    options: shuffle(options),\n    shuffle: () => shuffle(options),\n  };\n};\n","import * as Rx from 'rxjs';\nimport { Game, Score } from './';\nimport { delay, filter, map, tap } from 'rxjs/operators';\nimport { getChallenge } from './vietnamese';\nimport { showDoneButton } from './done';\n\nexport const gameStart$ = new Rx.ReplaySubject<Game>();\n\nfunction isButton(target: unknown | HTMLButtonElement): target is HTMLButtonElement {\n  return target && !!(target as HTMLButtonElement).value;\n}\nconst makeButtons = (options: string[]) =>\n  options.map(o => `<button value=\"${o}\">${o}</button>`).join('&nbsp;');\n\nexport function startGame() {\n  console.log(`Starting the game!`);\n\n  const startTime = Date.now();\n  const score: Score = { correct: [], incorrect: [], time: 0 };\n  let challenge = getChallenge();\n  let firstTry = true; // answer is correct when the guess is a first try\n\n  const challengeElement = document.createElement('p');\n  const optionsElement = document.createElement('p');\n  challengeElement.textContent = challenge.text;\n  optionsElement.innerHTML = makeButtons(challenge.options);\n\n  Rx.fromEvent(optionsElement, 'click')\n    .pipe(\n      map(event => event as MouseEvent),\n      filter(({ target }) => isButton(target)),\n      map(({ target }) => (target as HTMLButtonElement).value),\n      map(guess => {\n        if (guess === challenge.answer) {\n          challengeElement.textContent = `${challenge.text}: ${challenge.answer} 👍🏻`;\n          if (firstTry) {\n            score.correct.push(challenge.answer); // FIXME always be vn text\n          }\n          return () => {\n            challenge = getChallenge(challenge);\n            challengeElement.textContent = challenge.text;\n            optionsElement.innerHTML = makeButtons(challenge.options);\n            firstTry = true;\n          };\n        } else {\n          optionsElement.innerHTML = '🚫';\n          if (firstTry) {\n            score.incorrect.push(challenge.answer); // FIXME always be vn text\n          }\n          firstTry = false;\n          return () => {\n            optionsElement.innerHTML = makeButtons(challenge.shuffle());\n          };\n        }\n      }),\n      tap(() => {\n        score.time = Date.now() - startTime;\n      }),\n      delay(600),\n      map(fn => fn())\n    )\n    .subscribe();\n\n  const domElement = document.createElement('div');\n  domElement.appendChild(challengeElement);\n  domElement.appendChild(optionsElement);\n  domElement.appendChild(showDoneButton(score));\n\n  gameStart$.next({ domElement });\n}\n","/*\n * Author: Tim Sullivan\n * Mar 28 2020\n */\n\nimport * as serviceWorker from './serviceWorker';\nimport { gameDone$, gameStart$, showWait } from './game';\n\nconst root = document.getElementById('root') as HTMLDivElement;\nconst wait = showWait();\nroot.appendChild(wait.domElement);\n\ngameStart$.subscribe(game => {\n  root.innerText = '';\n  root.appendChild(game.domElement);\n});\ngameDone$.subscribe(done => {\n  root.innerText = '';\n  root.appendChild(done.domElement);\n});\n\n\n// app to work offline and load faster\nserviceWorker.register();\n","import * as Rx from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Game } from './';\nimport { startGame } from './game';\n\nexport function showWait(): Game {\n  Rx.fromEvent(document, 'click')\n    .pipe(\n      take(1),\n      map(startGame)\n    )\n    .subscribe();\n\n  const domElement = document.createElement('div');\n  domElement.innerHTML = `<p>bắt đầu</p>`;\n  return { domElement };\n}\n\n\n"],"sourceRoot":""}